package descent.tests.dstress;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class DstressTestGeneratorBase implements IDstressConfiguration {
	
	// Files where only syntax errors are reported. The number
	// of errors reported, then, is not important. At least one
	// should be reported
	protected static Set<String> syntaxErrors;
	static {
		syntaxErrors = new HashSet<String>();
		syntaxErrors.add("array_initialization_22_A.d");
		syntaxErrors.add("array_initialization_22_C.d");
		syntaxErrors.add("array_initialization_22_F.d");
		syntaxErrors.add("at_01_A.d");
		syntaxErrors.add("bang_01_B.d");
		syntaxErrors.add("bang_01_C.d");
		for(int i = 1; i <= 3; i++) {
			syntaxErrors.add("string_postfix_0" + i + "_B.d");
		}
		for(char c = 'A'; c <= 'Z'; c++) {
			syntaxErrors.add("string_postfix_04_" + c + ".d");
		}
		for(char c = 'A'; c <= 'Z'; c++) {
			if (c == 'C' || c == 'D' || c == 'W') {
				continue;
			}
			syntaxErrors.add("string_postfix_05_" + c + ".d");
		}
		for(char c = 'A'; c <= 'F'; c++) {
			syntaxErrors.add("template_struct_08_" + c + ".d");
		}
		syntaxErrors.add("this_02.d");
		syntaxErrors.add("throw_06.d");
		syntaxErrors.add("unchecked_01_B.d");
		syntaxErrors.add("undef_01.d");
		syntaxErrors.add("unittest_06.d");
		syntaxErrors.add("using_01_A.d");
		syntaxErrors.add("using_01_B.d");
		syntaxErrors.add("using_01_D.d");
		syntaxErrors.add("using_03_E.d");
		syntaxErrors.add("ucent_01.d");
		syntaxErrors.add("variadic_argument_01.d");
		syntaxErrors.add("version_12.d");
		syntaxErrors.add("virtual_01_A.d");
		syntaxErrors.add("virtual_01_B.d");
		syntaxErrors.add("virtual_01_C.d");
		syntaxErrors.add("warning_01_A.d");
		syntaxErrors.add("warning_01_B.d");
		syntaxErrors.add("align_02.d");
		syntaxErrors.add("argument_03.d");
		syntaxErrors.add("argument_04.d");
		syntaxErrors.add("argument_05.d");
		syntaxErrors.add("checked_01_B.d");
		syntaxErrors.add("const_35_A.d");
		syntaxErrors.add("const_35_B.d");
		syntaxErrors.add("const_35_C.d");
		syntaxErrors.add("const_35_D.d");
		syntaxErrors.add("cent_01.d");
		syntaxErrors.add("class_11.d");
		syntaxErrors.add("class_12.d");
		syntaxErrors.add("define_01.d");
		syntaxErrors.add("delegate_14_A.d");
		syntaxErrors.add("double_26_A.d");
		syntaxErrors.add("double_26_B.d");
		syntaxErrors.add("double_26_C.d");
		syntaxErrors.add("double_26_D.d");
		syntaxErrors.add("delete_06.d");
		syntaxErrors.add("elif_01.d");
		syntaxErrors.add("else_03.d");
		syntaxErrors.add("endif_01.d");
		syntaxErrors.add("end_01_A.d");
		syntaxErrors.add("end_01_B.d");
		syntaxErrors.add("error_01_A.d");
		syntaxErrors.add("error_01_B.d");
		syntaxErrors.add("explicit_01.d");
		syntaxErrors.add("eol_comment_01.d");
		syntaxErrors.add("eol_comment_02.d");
		syntaxErrors.add("eol_comment_03.d");
		syntaxErrors.add("eol_comment_04.d");
		syntaxErrors.add("eol_comment_05.d");
		syntaxErrors.add("eol_comment_06.d");
		syntaxErrors.add("eol_string_01.d");
		syntaxErrors.add("eol_string_02.d");
		syntaxErrors.add("eol_string_03.d");
		syntaxErrors.add("eol_string_04.d");
		syntaxErrors.add("eol_string_05.d");
		syntaxErrors.add("eol_string_06.d");
		syntaxErrors.add("eol_string_07.d");
		syntaxErrors.add("eol_string_08.d");
		syntaxErrors.add("eol_string_09.d");
		syntaxErrors.add("eol_string_10.d");
		syntaxErrors.add("eol_string_11.d");
		syntaxErrors.add("eol_string_12.d");
		syntaxErrors.add("escape_hex_02.d");
		syntaxErrors.add("escape_hex_string_03.d");
		syntaxErrors.add("escape_hex_string_04.d");
		syntaxErrors.add("escape_octal_02.d");
		syntaxErrors.add("escape_unicode16_03.d");
		syntaxErrors.add("escape_unicode16_04.d");
		syntaxErrors.add("escape_unicode16_05.d");
		syntaxErrors.add("escape_unicode16_06.d");
		syntaxErrors.add("escape_unicode32_04.d");
		syntaxErrors.add("escape_unicode32_05.d");
		syntaxErrors.add("escape_unicode32_06.d");
		syntaxErrors.add("escape_unicode32_07.d");
		syntaxErrors.add("escape_unicode32_08.d");
		syntaxErrors.add("escape_unicode32_09.d");
		syntaxErrors.add("escape_unicode32_10.d");
		syntaxErrors.add("escape_unicode32_11.d");
		syntaxErrors.add("escape_unicode32_12.d");
		syntaxErrors.add("fixed_01.d");
		syntaxErrors.add("flags_01_A.d");
		syntaxErrors.add("flags_01_B.d");
		syntaxErrors.add("flags_01_C.d");
		syntaxErrors.add("flags_01_D.d");
		syntaxErrors.add("float_literal_dec_06.d");
		syntaxErrors.add("float_literal_dec_07.d");
		syntaxErrors.add("float_literal_dec_12.d");
		syntaxErrors.add("float_literal_dec_13.d");
		syntaxErrors.add("float_literal_dec_14.d");
		syntaxErrors.add("float_literal_dec_15.d");
		syntaxErrors.add("float_literal_dec_16.d");
		syntaxErrors.add("float_literal_dec_17.d");
		syntaxErrors.add("foreach_32_A.d");
		syntaxErrors.add("foreach_32_B.d");
		syntaxErrors.add("function_04_A.d");
		syntaxErrors.add("function_04_B.d");
		syntaxErrors.add("final_08.d");
		syntaxErrors.add("foreach_17.d");
		syntaxErrors.add("foreach_18.d");
		syntaxErrors.add("get_01_C.d");
		syntaxErrors.add("goto_15_A.d");
		syntaxErrors.add("goto_15_B.d");
		syntaxErrors.add("ifloat_06_B.d");
		syntaxErrors.add("if_09.d");
		syntaxErrors.add("if_10_A.d");
		syntaxErrors.add("if_10_B.d");
		syntaxErrors.add("if_10_C.d");
		syntaxErrors.add("if_10_D.d");
		syntaxErrors.add("if_10_E.d");
		syntaxErrors.add("if_13_A.d");
		syntaxErrors.add("if_13_B.d");
		syntaxErrors.add("if_13_C.d");
		syntaxErrors.add("if_13_D.d");
		syntaxErrors.add("if_13_E.d");
		syntaxErrors.add("implicit_01.d");
		syntaxErrors.add("import_12_A.d");
		syntaxErrors.add("import_12_B.d");
		syntaxErrors.add("import_12_C.d");
		syntaxErrors.add("import_12_D.d");
		syntaxErrors.add("import_12_E.d");
		syntaxErrors.add("import_19_A.d");
		syntaxErrors.add("interface_22_A.d");
		syntaxErrors.add("interface_22_B.d");
		syntaxErrors.add("internal_01_A.d");
		syntaxErrors.add("internal_01_B.d");
		syntaxErrors.add("is_01_A.d");
		syntaxErrors.add("is_01_B.d");
		syntaxErrors.add("is_01_C.d");
		syntaxErrors.add("is_01_D.d");
		syntaxErrors.add("is_01_E.d");
		syntaxErrors.add("is_14_A.d");
		syntaxErrors.add("is_14_B.d");
		syntaxErrors.add("is_14_C.d");
		syntaxErrors.add("is_14_D.d");
		syntaxErrors.add("is_14_E.d");
		syntaxErrors.add("is_14_F.d");
		syntaxErrors.add("import_01.d");
		syntaxErrors.add("import_04.d");
		syntaxErrors.add("inline_01.d");
		syntaxErrors.add("interface_13.d");
		syntaxErrors.add("interface_14.d");
		for(int i = 1; i < 43; i++)
		{
			syntaxErrors.add("invalid_utf_" +
					((i < 10) ? ("0" + i) : Integer.toString(i)) + ".d");
		}
		syntaxErrors.add("invariant_08.d");
		syntaxErrors.add("invariant_09.d");
		for(char c = 'B'; c <= 'Z'; c++)
		{
			if(c != 'A')
			{
				syntaxErrors.add("label_04_" + c + ".d");
			}
			syntaxErrors.add("label_05_" + c + ".d");
			syntaxErrors.add("label_06_" + c + ".d");
		}
		syntaxErrors.add("label_07_A.d");
		syntaxErrors.add("label_07_B.d");
		syntaxErrors.add("lock_01_A.d");
		syntaxErrors.add("lock_01_B.d");
		syntaxErrors.add("line_token_05.d");
		syntaxErrors.add("line_token_06.d");
		syntaxErrors.add("line_token_07.d");
		syntaxErrors.add("line_token_08.d");
		syntaxErrors.add("line_token_09.d");
		syntaxErrors.add("line_token_10.d");
		syntaxErrors.add("module_05_D.d");
		syntaxErrors.add("module_03.d");
		syntaxErrors.add("namespace_01_A.d");
		syntaxErrors.add("namespace_01_B.d");
		syntaxErrors.add("namespace_01_C.d");
		syntaxErrors.add("new_27_A.d");
		syntaxErrors.add("new_27_B.d");
		syntaxErrors.add("new_03.d");
		syntaxErrors.add("new_15.d");
		syntaxErrors.add("new_16.d");
		syntaxErrors.add("new_17.d");
		syntaxErrors.add("new_18.d");
		syntaxErrors.add("new_19.d");
		syntaxErrors.add("new_21.d");
		syntaxErrors.add("obsolete_01_A.d");
		syntaxErrors.add("obsolete_01_B.d");
		syntaxErrors.add("obsolete_01_C.d");
		syntaxErrors.add("obsolete_01_D.d");
		syntaxErrors.add("opAssign_02_C.d");
		syntaxErrors.add("params_01_A.d");
		syntaxErrors.add("params_01_B.d");
		syntaxErrors.add("params_01_C.d");
		syntaxErrors.add("pragma_07_A.d");
		syntaxErrors.add("pragma_lib_06.d");
		syntaxErrors.add("readonly_01_A.d");
		syntaxErrors.add("readonly_01_B.d");
		syntaxErrors.add("readonly_01_C.d");
		syntaxErrors.add("readonly_01_D.d");
		syntaxErrors.add("region_01_A.d");
		syntaxErrors.add("region_01_B.d");
		syntaxErrors.add("sealed_01_A.d");
		syntaxErrors.add("sealed_01_B.d");
		syntaxErrors.add("sealed_01_C.d");
		syntaxErrors.add("sealed_01_D.d");
		syntaxErrors.add("set_01_A.d");
		syntaxErrors.add("set_01_B.d");
		syntaxErrors.add("set_01_C.d");
		syntaxErrors.add("stackalloc_01_A.d");
		syntaxErrors.add("stackalloc_01_B.d");
		syntaxErrors.add("stackalloc_01_C.d");
		syntaxErrors.add("stackalloc_01_D.d");
		syntaxErrors.add("stackalloc_01_E.d");
		syntaxErrors.add("string_postfix_05_n.d");
		syntaxErrors.add("struct_05.d");
		syntaxErrors.add("template_class_18_A.d");
		syntaxErrors.add("template_class_18_B.d");
		syntaxErrors.add("template_class_18_C.d");
		syntaxErrors.add("template_class_18_D.d");
		syntaxErrors.add("template_class_18_E.d");
		syntaxErrors.add("template_class_18_F.d");
		syntaxErrors.add("this_08_A.d");
		syntaxErrors.add("this_08_B.d");
		syntaxErrors.add("this_08_C.d");
		syntaxErrors.add("this_08_D.d");
		syntaxErrors.add("this_09_A.d");
		syntaxErrors.add("this_09_B.d");
		syntaxErrors.add("this_09_C.d");
		syntaxErrors.add("this_14_B.d");
		syntaxErrors.add("this_14_C.d");
		syntaxErrors.add("this_14_D.d");
		syntaxErrors.add("this_14_E.d");
		syntaxErrors.add("version_13.d");
	}
	
	// Maps name of file -> number of errors reported by Descent
	// Used since DMD reports multi-line errors for some stuff (ambigous
	//    overloads, etc.)
	protected static Map<String, Integer> multiLineErrors;
	static
	{
		multiLineErrors = new HashMap<String, Integer>();
		multiLineErrors.put("test_overload_11_d", 1);
	}
	
	protected static Set<String> failures;
	static {
		failures = new HashSet<String>();
		failures.add("ExpressionStatement_06_A.d");
		failures.add("ExpressionStatement_06_B.d");
		failures.add("ExpressionStatement_11_A.d");
		failures.add("OutOfMemory_03.d");
		failures.add("abstract_14.d");
		failures.add("alias_05.d");
		failures.add("alias_15.d");
		failures.add("alias_16.d");
		failures.add("alias_17.d");
		failures.add("alias_19.d");
		failures.add("alias_20.d");
		failures.add("alias_21.d");
		failures.add("alias_22.d");
		failures.add("alias_23.d");
		failures.add("alias_25_A.d");
		failures.add("alias_25_B.d");
		failures.add("alias_29_A.d");
		failures.add("alias_29_B.d");
		failures.add("alias_30_J.d");
		failures.add("alias_30_K.d");
		failures.add("alias_32_E.d");
		failures.add("alias_34_B.d");
		failures.add("alias_35_A.d");
		failures.add("alias_35_B.d");
		failures.add("alias_35_C.d");
		failures.add("alias_35_D.d");
		failures.add("alias_35_E.d");
		failures.add("alias_35_F.d");
		failures.add("alias_36_A.d");
		failures.add("alias_36_E.d");
		failures.add("alias_41_A.d");
		failures.add("align_13.d");
		failures.add("align_14.d");
		failures.add("align_15.d");
		failures.add("align_16.d");
		failures.add("align_17.d");
		failures.add("array_initialization_19.d");
		failures.add("array_initialization_27_C.d");
		failures.add("array_initialization_32_A.d");
		failures.add("array_initialization_32_B.d");
		failures.add("array_initialization_32_C.d");
		failures.add("array_initialization_33_A.d");
		failures.add("array_initialization_33_B.d");
		failures.add("array_initialization_33_C.d");
		failures.add("array_initialization_33_D.d");
		failures.add("array_initialization_33_E.d");
		failures.add("asm_03_B.d");
		failures.add("asm_03_D.d");
		failures.add("asm_04_A.d");
		failures.add("asm_04_D.d");
		failures.add("asm_cvtpd2pi_01_A.d");
		failures.add("asm_cvtpd2pi_01_B.d");
		failures.add("asm_cvtps2pi_01_A.d");
		failures.add("asm_cvtps2pi_01_B.d");
		failures.add("asm_db_01_A.d");
		failures.add("asm_db_01_C.d");
		failures.add("asm_di_02_A.d");
		failures.add("asm_di_02_C.d");
		failures.add("asm_dl_02_A.d");
		failures.add("asm_dl_02_C.d");
		failures.add("asm_ds_01_A.d");
		failures.add("asm_ds_01_C.d");
		failures.add("asm_fcmovb_01_A.d");
		failures.add("asm_fcmovbe_01_A.d");
		failures.add("asm_fcmove_01_A.d");
		failures.add("asm_fcmovnb_01_A.d");
		failures.add("asm_fcmovnbe_01_A.d");
		failures.add("asm_fcmovne_01_A.d");
		failures.add("asm_fcmovnu_01_A.d");
		failures.add("asm_fcmovu_01_A.d");
		failures.add("asm_fdiv_01_D.d");
		failures.add("asm_fdivp_01_A.d");
		failures.add("asm_fdivp_01_B.d");
		failures.add("asm_fdivr_01_D.d");
		failures.add("asm_fdivrp_01_A.d");
		failures.add("asm_fdivrp_01_B.d");
		failures.add("asm_fnsave_02_A.d");
		failures.add("asm_fnsave_02_B.d");
		failures.add("asm_fnsave_02_C.d");
		failures.add("asm_fnsave_02_D.d");
		failures.add("asm_fnsave_02_E.d");
		failures.add("asm_fnsave_02_F.d");
		failures.add("asm_fnsave_02_G.d");
		failures.add("asm_fnsave_02_H.d");
		failures.add("asm_fnsave_02_I.d");
		failures.add("asm_fnsave_02_J.d");
		failures.add("asm_fnsave_02_K.d");
		failures.add("asm_fnsave_02_L.d");
		failures.add("asm_fnsave_02_M.d");
		failures.add("asm_fnsave_02_N.d");
		failures.add("asm_fnstcw_02_A.d");
		failures.add("asm_fnstcw_02_B.d");
		failures.add("asm_fnstcw_02_C.d");
		failures.add("asm_fnstcw_02_D.d");
		failures.add("asm_frndint_02_A.d");
		failures.add("asm_frndint_02_B.d");
		failures.add("asm_frndint_02_C.d");
		failures.add("asm_frndint_02_D.d");
		failures.add("asm_frndint_02_E.d");
		failures.add("asm_frndint_02_F.d");
		failures.add("asm_frndint_02_G.d");
		failures.add("asm_frndint_02_H.d");
		failures.add("asm_frndint_02_I.d");
		failures.add("asm_frndint_02_J.d");
		failures.add("asm_frndint_02_K.d");
		failures.add("asm_frndint_02_L.d");
		failures.add("asm_frndint_02_M.d");
		failures.add("asm_frstor_02_A.d");
		failures.add("asm_frstor_02_B.d");
		failures.add("asm_frstor_02_C.d");
		failures.add("asm_frstor_02_D.d");
		failures.add("asm_frstor_02_E.d");
		failures.add("asm_frstor_02_F.d");
		failures.add("asm_frstor_02_G.d");
		failures.add("asm_frstor_02_H.d");
		failures.add("asm_frstor_02_I.d");
		failures.add("asm_frstor_02_J.d");
		failures.add("asm_frstor_02_K.d");
		failures.add("asm_frstor_02_L.d");
		failures.add("asm_frstor_02_M.d");
		failures.add("asm_frstor_02_N.d");
		failures.add("asm_fsave_02_A.d");
		failures.add("asm_fsave_02_B.d");
		failures.add("asm_fsave_02_C.d");
		failures.add("asm_fsave_02_D.d");
		failures.add("asm_fsave_02_E.d");
		failures.add("asm_fsave_02_F.d");
		failures.add("asm_fsave_02_G.d");
		failures.add("asm_fsave_02_H.d");
		failures.add("asm_fsave_02_I.d");
		failures.add("asm_fsave_02_J.d");
		failures.add("asm_fsave_02_K.d");
		failures.add("asm_fsave_02_L.d");
		failures.add("asm_fsave_02_M.d");
		failures.add("asm_fsave_02_N.d");
		failures.add("asm_fscale_02_A.d");
		failures.add("asm_fscale_02_B.d");
		failures.add("asm_fscale_02_C.d");
		failures.add("asm_fscale_02_D.d");
		failures.add("asm_fscale_02_E.d");
		failures.add("asm_fscale_02_F.d");
		failures.add("asm_fscale_02_G.d");
		failures.add("asm_fscale_02_H.d");
		failures.add("asm_fscale_02_I.d");
		failures.add("asm_fscale_02_J.d");
		failures.add("asm_fscale_02_K.d");
		failures.add("asm_fscale_02_L.d");
		failures.add("asm_fscale_02_M.d");
		failures.add("asm_fsin_02_A.d");
		failures.add("asm_fsin_02_B.d");
		failures.add("asm_fsin_02_C.d");
		failures.add("asm_fsin_02_D.d");
		failures.add("asm_fsin_02_E.d");
		failures.add("asm_fsin_02_F.d");
		failures.add("asm_fsin_02_G.d");
		failures.add("asm_fsin_02_H.d");
		failures.add("asm_fsin_02_I.d");
		failures.add("asm_fsin_02_J.d");
		failures.add("asm_fsin_02_K.d");
		failures.add("asm_fsin_02_L.d");
		failures.add("asm_fsin_02_M.d");
		failures.add("asm_fsincos_02_A.d");
		failures.add("asm_fsincos_02_B.d");
		failures.add("asm_fsincos_02_C.d");
		failures.add("asm_fsincos_02_D.d");
		failures.add("asm_fsincos_02_E.d");
		failures.add("asm_fsincos_02_F.d");
		failures.add("asm_fsincos_02_G.d");
		failures.add("asm_fsincos_02_H.d");
		failures.add("asm_fsincos_02_I.d");
		failures.add("asm_fsincos_02_J.d");
		failures.add("asm_fsincos_02_K.d");
		failures.add("asm_fsincos_02_L.d");
		failures.add("asm_fsincos_02_M.d");
		failures.add("asm_fsqrt_02_A.d");
		failures.add("asm_fsqrt_02_B.d");
		failures.add("asm_fsqrt_02_C.d");
		failures.add("asm_fsqrt_02_D.d");
		failures.add("asm_fsqrt_02_E.d");
		failures.add("asm_fsqrt_02_F.d");
		failures.add("asm_fsqrt_02_G.d");
		failures.add("asm_fst_02_A.d");
		failures.add("asm_fst_02_B.d");
		failures.add("asm_fst_02_C.d");
		failures.add("asm_fst_02_D.d");
		failures.add("asm_fst_02_E.d");
		failures.add("asm_fstcw_02_A.d");
		failures.add("asm_fstcw_02_B.d");
		failures.add("asm_fstcw_02_C.d");
		failures.add("asm_fstcw_02_D.d");
		failures.add("asm_fstp_02_A.d");
		failures.add("asm_fstp_02_B.d");
		failures.add("asm_fstp_02_C.d");
		failures.add("asm_fstp_02_D.d");
		failures.add("asm_fstp_02_E.d");
		failures.add("asm_fsubp_01_A.d");
		failures.add("asm_fsubp_01_B.d");
		failures.add("asm_fsubrp_01_A.d");
		failures.add("asm_fsubrp_01_B.d");
		failures.add("asm_lea_02_A.d");
		failures.add("asm_mov_04_A.d");
		failures.add("asm_offset_01_A.d");
		failures.add("asm_offset_01_B.d");
		failures.add("assert_20_A.d");
		failures.add("assert_20_B.d");
		failures.add("auto_03.d");
		failures.add("auto_13_A.d");
		failures.add("auto_14_A.d");
		failures.add("auto_14_B.d");
		failures.add("auto_17_A.d");
		failures.add("auto_17_B.d");
		failures.add("auto_17_C.d");
		failures.add("auto_17_D.d");
		failures.add("auto_17_E.d");
		failures.add("auto_17_F.d");
		failures.add("auto_18_B.d");
		failures.add("auto_18_C.d");
		failures.add("auto_19_B.d");
		failures.add("bounds_checking_01.d");
		failures.add("bounds_checking_02.d");
		failures.add("bounds_checking_04.d");
		failures.add("bounds_checking_05.d");
		failures.add("break_11_A.d");
		failures.add("break_11_B.d");
		failures.add("break_11_C.d");
		failures.add("break_11_D.d");
		failures.add("break_12_B.d");
		failures.add("break_13_A.d");
		failures.add("bug_20041016_A.d");
		failures.add("bug_20041016_B.d");
		failures.add("bug_20041103_C.d");
		failures.add("bug_cgcod_562_A1.d");
		failures.add("bug_cgcod_562_A2.d");
		failures.add("bug_cgcod_562_A3.d");
		failures.add("bug_cgcod_562_B1.d");
		failures.add("bug_cgcod_562_B2.d");
		failures.add("bug_cgcod_562_B3.d");
		failures.add("bug_cgcod_562_C1.d");
		failures.add("bug_cgcod_562_C2.d");
		failures.add("bug_cgcod_562_C3.d");
		failures.add("bug_cgcod_562_D1.d");
		failures.add("bug_cgcod_562_D2.d");
		failures.add("bug_cgcod_562_D3.d");
		failures.add("bug_cgcod_562_E1.d");
		failures.add("bug_cgcod_562_E2.d");
		failures.add("bug_cgcod_562_E3.d");
		failures.add("bug_cgcod_562_F1.d");
		failures.add("bug_cgcod_562_F2.d");
		failures.add("bug_cgcod_562_F3.d");
		failures.add("bug_cgcod_562_G1.d");
		failures.add("bug_cgcod_562_G2.d");
		failures.add("bug_cgcod_562_G3.d");
		failures.add("bug_cgcod_562_H1.d");
		failures.add("bug_cgcod_562_H2.d");
		failures.add("bug_cgcod_562_H3.d");
		failures.add("bug_cgcod_562_I1.d");
		failures.add("bug_cgcod_562_I2.d");
		failures.add("bug_cgcod_562_I3.d");
		failures.add("bug_cgcod_562_J1.d");
		failures.add("bug_cgcod_562_J2.d");
		failures.add("bug_cgcod_562_J3.d");
		failures.add("bug_cgcod_562_K1.d");
		failures.add("bug_cgcod_562_K2.d");
		failures.add("bug_cgcod_562_K3.d");
		failures.add("bug_cgcod_562_L1.d");
		failures.add("bug_cgcod_562_L2.d");
		failures.add("bug_cgcod_562_L3.d");
		failures.add("bug_cgcod_562_M1.d");
		failures.add("bug_cgcod_562_M2.d");
		failures.add("bug_cgcod_562_M3.d");
		failures.add("bug_cgcod_562_N1.d");
		failures.add("bug_cgcod_562_N2.d");
		failures.add("bug_cgcod_562_N3.d");
		failures.add("bug_cgcs_353_F2.d");
		failures.add("bug_cgcs_353_G2.d");
		failures.add("bug_cgcs_353_H2.d");
		failures.add("bug_cgcs_353_O2.d");
		failures.add("bug_cgcs_353_P2.d");
		failures.add("bug_cgcs_353_S2.d");
		failures.add("bug_cgcs_353_T2.d");
		failures.add("bug_cgcs_353_U2.d");
		failures.add("bug_cgcs_353_V2.d");
		failures.add("bug_cod1_1656_B.d");
		failures.add("bug_cod1_1656_H.d");
		failures.add("bug_cod1_2528_A.d");
		failures.add("bug_cod1_2528_C.d");
		failures.add("bug_declaration_440_A.d");
		failures.add("bug_declaration_440_B.d");
		failures.add("bug_declaration_440_C.d");
		failures.add("bug_e2ir_141_B.d");
		failures.add("bug_e2ir_1786_D.d");
		failures.add("bug_e2ir_299_A.d");
		failures.add("bug_e2ir_520_B.d");
		failures.add("bug_e2ir_736_D.d");
		failures.add("bug_e2ir_772_B.d");
		failures.add("bug_e2ir_772_D.d");
		failures.add("bug_e2ir_772_E.d");
		failures.add("bug_e2ir_772_H.d");
		failures.add("bug_e2ir_772_I.d");
		failures.add("bug_expression_4275_A.d");
		failures.add("bug_expression_4420_A.d");
		failures.add("bug_expression_4420_B.d");
		failures.add("bug_expression_5981_A.d");
		failures.add("bug_gimplify_678_A.d");
		failures.add("bug_glue_700_B.d");
		failures.add("bug_glue_700_D.d");
		failures.add("bug_mangle_61_A.d");
		failures.add("bug_optimize_294_G.d");
		failures.add("bug_template_2851_A.d");
		failures.add("bug_template_2851_C.d");
		failures.add("bug_template_610_A.d");
		failures.add("bug_template_610_B.d");
		failures.add("bug_template_610_D.d");
		failures.add("bug_template_610_E.d");
		failures.add("bug_tocsym_343_A.d");
		failures.add("bug_tocsym_343_B.d");
		failures.add("bug_toir_170_A.d");
		failures.add("bug_toir_182_A.d");
		failures.add("case_01.d");
		failures.add("case_02.d");
		failures.add("case_03.d");
		failures.add("case_05_A.d");
		failures.add("case_05_B.d");
		failures.add("case_05_C.d");
		failures.add("case_06_J.d");
		failures.add("case_06_K.d");
		failures.add("cast_01.d");
		failures.add("cast_02.d");
		failures.add("cast_29_B.d");
		failures.add("cast_33_A.d");
		failures.add("cast_33_B.d");
		failures.add("cast_34_B.d");
		failures.add("cast_35_A.d");
		failures.add("catch_06.d");
		failures.add("cdouble_12_B.d");
		failures.add("cfloat_12_B.d");
		failures.add("char_07_A.d");
		failures.add("char_07_B.d");
		failures.add("char_07_C.d");
		failures.add("char_07_D.d");
		failures.add("char_07_E.d");
		failures.add("char_07_F.d");
		failures.add("char_07_G.d");
		failures.add("char_07_H.d");
		failures.add("character_literal_01_B.d");
		failures.add("class_06.d");
		failures.add("class_18_A.d");
		failures.add("class_22_B.d");
		failures.add("class_23_C.d");
		failures.add("classinfo_02_A.d");
		failures.add("classinfo_02_B.d");
		failures.add("command_line_null_source_03.d");
		failures.add("const_11.d");
		failures.add("const_15.d");
		failures.add("const_16_B.d");
		failures.add("const_27_B.d");
		failures.add("const_27_C.d");
		failures.add("const_27_D.d");
		failures.add("const_27_E.d");
		failures.add("const_27_F.d");
		failures.add("const_28_A.d");
		failures.add("const_28_B.d");
		failures.add("const_28_C.d");
		failures.add("const_28_D.d");
		failures.add("const_28_E.d");
		failures.add("const_28_G.d");
		failures.add("const_28_H.d");
		failures.add("const_30_A.d");
		failures.add("const_30_B.d");
		failures.add("const_30_D.d");
		failures.add("const_30_F.d");
		failures.add("const_31.d");
		failures.add("const_32_B.d");
		failures.add("const_32_C.d");
		failures.add("const_36_A.d");
		failures.add("const_36_B.d");
		failures.add("const_36_C.d");
		failures.add("const_36_D.d");
		failures.add("const_36_E.d");
		failures.add("const_36_F.d");
		failures.add("const_36_G.d");
		failures.add("const_36_H.d");
		failures.add("const_36_I.d");
		failures.add("const_37_A.d");
		failures.add("const_37_B.d");
		failures.add("const_37_C.d");
		failures.add("const_37_D.d");
		failures.add("const_37_E.d");
		failures.add("const_37_F.d");
		failures.add("const_38_A.d");
		failures.add("const_38_B.d");
		failures.add("const_40_A.d");
		failures.add("const_40_C.d");
		failures.add("const_40_D.d");
		failures.add("const_41_A.d");
		failures.add("const_43_A.d");
		failures.add("const_43_C.d");
		failures.add("const_43_D.d");
		failures.add("continue_01.d");
		failures.add("continue_02.d");
		failures.add("continue_03_A.d");
		failures.add("continue_03_B.d");
		failures.add("continue_04_A.d");
		failures.add("continue_04_B.d");
		failures.add("continue_04_E.d");
		failures.add("creal_13.d");
		failures.add("creal_14.d");
		failures.add("creal_15.d");
		failures.add("creal_37_B.d");
		failures.add("dchar_10_A.d");
		failures.add("dchar_10_B.d");
		failures.add("dchar_10_C.d");
		failures.add("dchar_10_D.d");
		failures.add("dchar_10_E.d");
		failures.add("dchar_10_F.d");
		failures.add("dchar_10_G.d");
		failures.add("dchar_10_H.d");
		failures.add("debug_06.d");
		failures.add("debug_11_A.d");
		failures.add("debug_11_B.d");
		failures.add("debug_11_C.d");
		failures.add("debug_14_A.d");
		failures.add("debug_info_08_A.d");
		failures.add("debug_info_08_B.d");
		failures.add("debug_info_08_C.d");
		failures.add("debug_info_08_D.d");
		failures.add("debug_info_08_E.d");
		failures.add("debug_info_09_A.d");
		failures.add("debug_info_10_A.d");
		failures.add("debug_info_11_A.d");
		failures.add("debug_info_12_A.d");
		failures.add("default_argument_08.d");
		failures.add("delegate_01.d");
		failures.add("delegate_14_B.d");
		failures.add("delegate_16.d");
		failures.add("delegate_19_B.d");
		failures.add("delete_03.d");
		failures.add("delete_04.d");
		failures.add("delete_05.d");
		failures.add("delete_12_A.d");
		failures.add("delete_12_B.d");
		failures.add("delete_12_D.d");
		failures.add("deprecated_14.d");
		failures.add("deprecated_15.d");
		failures.add("deprecated_17.d");
		failures.add("deprecated_18.d");
		failures.add("deprecated_20.d");
		failures.add("deprecated_22_A.d");
		failures.add("deprecated_22_C.d");
		failures.add("destructor_04.d");
		failures.add("destructor_06.d");
		failures.add("double_29_A.d");
		failures.add("double_29_B.d");
		failures.add("double_29_C.d");
		failures.add("double_29_D.d");
		failures.add("enum_10.d");
		failures.add("enum_38.d");
		failures.add("enum_41_A.d");
		failures.add("enum_41_B.d");
		failures.add("enum_41_C.d");
		failures.add("enum_41_D.d");
		failures.add("enum_41_E.d");
		failures.add("enum_41_F.d");
		failures.add("enum_41_G.d");
		failures.add("enum_41_H.d");
		failures.add("enum_43_A.d");
		failures.add("enum_43_B.d");
		failures.add("enum_43_G.d");
		failures.add("enum_43_H.d");
		failures.add("enum_44_A.d");
		failures.add("enum_46_A.d");
		failures.add("evaluation_order_01.d");
		failures.add("evaluation_order_02.d");
		failures.add("evaluation_order_03.d");
		failures.add("expression_4154_A.d");
		failures.add("expression_4154_C.d");
		failures.add("extern_07.d");
		failures.add("extern_10_A.d");
		failures.add("extern_10_D.d");
		failures.add("final_01.d");
		failures.add("final_04.d");
		failures.add("final_07.d");
		failures.add("final_09.d");
		failures.add("final_10.d");
		failures.add("final_11.d");
		failures.add("final_12_C.d");
		failures.add("finally_02.d");
		failures.add("finally_03.d");
		failures.add("finally_07.d");
		failures.add("finally_09.d");
		failures.add("finally_11_A.d");
		failures.add("float_literal_dec_04.d");
		failures.add("for_06_A.d");
		failures.add("for_06_E.d");
		failures.add("for_06_F.d");
		failures.add("for_06_G.d");
		failures.add("foreach_10.d");
		failures.add("foreach_13.d");
		failures.add("foreach_15.d");
		failures.add("foreach_28.d");
		failures.add("foreach_28_B.d");
		failures.add("foreach_29.d");
		failures.add("foreach_30_A.d");
		failures.add("foreach_30_B.d");
		failures.add("foreach_38_A.d");
		failures.add("forward_reference_03.d");
		failures.add("forward_reference_04.d");
		failures.add("forward_reference_06.d");
		failures.add("forward_reference_07.d");
		failures.add("forward_reference_08.d");
		failures.add("forward_reference_09.d");
		failures.add("forward_reference_10.d");
		failures.add("forward_reference_12_B.d");
		failures.add("forward_reference_12_C.d");
		failures.add("forward_reference_12_D.d");
		failures.add("forward_reference_12_F.d");
		failures.add("forward_reference_13_D.d");
		failures.add("forward_reference_14_B.d");
		failures.add("forward_reference_15_B.d");
		failures.add("forward_reference_16_B.d");
		failures.add("forward_reference_16_C.d");
		failures.add("forward_reference_16_F.d");
		failures.add("forward_reference_16_G.d");
		failures.add("forward_reference_17_A.d");
		failures.add("forward_reference_18_A.d");
		failures.add("forward_reference_18_C.d");
		failures.add("forward_reference_18_D.d");
		failures.add("forward_reference_19_B.d");
		failures.add("forward_reference_20_A.d");
		failures.add("forward_reference_20_D.d");
		failures.add("function_05.d");
		failures.add("get_01_A.d");
		failures.add("get_01_B.d");
		failures.add("goto_10.d");
		failures.add("goto_11.d");
		failures.add("html_entity_amsa.d");
		failures.add("html_entity_amsb.d");
		failures.add("html_entity_amsc.d");
		failures.add("html_entity_amsn.d");
		failures.add("html_entity_amso.d");
		failures.add("html_entity_amsr.d");
		failures.add("html_entity_box.d");
		failures.add("html_entity_cyr1.d");
		failures.add("html_entity_cyr2.d");
		failures.add("html_entity_dia.d");
		failures.add("html_entity_grk3.d");
		failures.add("html_entity_lat2.d");
		failures.add("html_entity_latin.d");
		failures.add("html_entity_num.d");
		failures.add("html_entity_pub.d");
		failures.add("html_entity_spezial.d");
		failures.add("html_entity_symbol.d");
		failures.add("html_entity_tech.d");
		failures.add("html_line_ending_mac.d");
		failures.add("html_line_ending_unicode.d");
		failures.add("if_15_A.d");
		failures.add("import_02.d");
		failures.add("import_03.d");
		failures.add("import_05.d");
		failures.add("import_08_A.d");
		failures.add("import_09.d");
		failures.add("import_10_A.d");
		failures.add("import_10_B.d");
		failures.add("import_11_A.d");
		failures.add("import_11_B.d");
		failures.add("import_14_A.d");
		failures.add("import_16_C.d");
		failures.add("import_16_D.d");
		failures.add("import_16_F.d");
		failures.add("import_16_G.d");
		failures.add("import_16_H.d");
		failures.add("import_17_A.d");
		failures.add("import_19_B.d");
		failures.add("import_20_B.d");
		failures.add("import_20_C.d");
		failures.add("in_out_body_05.d");
		failures.add("in_out_body_08.d");
		failures.add("in_out_body_09_B.d");
		failures.add("in_out_body_09_C.d");
		failures.add("in_out_body_10_A.d");
		failures.add("in_out_body_10_B.d");
		failures.add("in_out_body_10_C.d");
		failures.add("in_out_body_11_E.d");
		failures.add("in_out_body_11_F.d");
		failures.add("in_out_body_11_G.d");
		failures.add("in_out_body_11_H.d");
		failures.add("inerpret_05_A.d");
		failures.add("inerpret_05_B.d");
		failures.add("inline_05.d");
		failures.add("inline_10_A.d");
		failures.add("inline_13_A.d");
		failures.add("inline_16_C.d");
		failures.add("inout_01.d");
		failures.add("inout_02_A.d");
		failures.add("int_08.d");
		failures.add("interface_11.d");
		failures.add("interface_18.d");
		failures.add("interface_24_A.d");
		failures.add("interface_24_B.d");
		failures.add("interface_24_C.d");
		failures.add("interpret_05_A.d");
		failures.add("interpret_05_B.d");
		failures.add("interpret_06_A.d");
		failures.add("interpret_06_B.d");
		failures.add("invariant_06.d");
		failures.add("invariant_17.d");
		failures.add("invariant_18.d");
		failures.add("invariant_23.d");
		failures.add("invariant_25.d");
		failures.add("invariant_26.d");
		failures.add("invariant_33_B.d");
		failures.add("is_09_A.d");
		failures.add("is_09_B.d");
		failures.add("is_09_C.d");
		failures.add("is_09_D.d");
		failures.add("is_09_E.d");
		failures.add("is_09_F.d");
		failures.add("is_09_G.d");
		failures.add("is_09_H.d");
		failures.add("is_11_G.d");
		failures.add("is_13_A.d");
		failures.add("is_13_C.d");
		failures.add("is_15_C.d");
		failures.add("is_15_D.d");
		failures.add("is_15_E.d");
		failures.add("is_15_G.d");
		failures.add("is_15_I.d");
		failures.add("is_15_J.d");
		failures.add("is_15_K.d");
		failures.add("is_16_A.d");
		failures.add("is_16_B.d");
		failures.add("is_16_C.d");
		failures.add("is_17_A.d");
		failures.add("is_17_B.d");
		failures.add("label_04_A.d");
		failures.add("label_05_Y.d");
		failures.add("label_06_G.d");
		failures.add("lazy_02_A.d");
		failures.add("lazy_02_B.d");
		failures.add("lazy_02_C.d");
		failures.add("lazy_02_D.d");
		failures.add("lazy_03_A.d");
		failures.add("lazy_03_B.d");
		failures.add("lazy_04_A.d");
		failures.add("lazy_04_B.d");
		failures.add("length_01.d");
		failures.add("length_10_A.d");
		failures.add("length_10_A.d.d");
		failures.add("length_10_B.d");
		failures.add("length_10_B.d.d");
		failures.add("length_10_I.d");
		failures.add("length_11_A.d");
		failures.add("length_12_A.d");
		failures.add("line_ending_unicode.d");
		failures.add("linking_01.d");
		failures.add("linking_02.d");
		failures.add("linking_02_B.d");
		failures.add("linking_02_C.d");
		failures.add("main_05.d");
		failures.add("mangleof_15_D.d");
		failures.add("mangleof_19_A.d");
		failures.add("mangleof_19_B.d");
		failures.add("mangleof_19_C.d");
		failures.add("mangleof_19_D.d");
		failures.add("mangleof_19_E.d");
		failures.add("many_functions_01.d");
		failures.add("many_functions_02.d");
		failures.add("mixin_04.d");
		failures.add("mixin_07.d");
		failures.add("mixin_10.d");
		failures.add("mixin_13_A.d");
		failures.add("mixin_15_C.d");
		failures.add("mixin_16_A.d");
		failures.add("mixin_19_D.d");
		failures.add("mixin_19_I.d");
		failures.add("mixin_19_L.d");
		failures.add("mixin_21_B.d");
		failures.add("mixin_22_A.d");
		failures.add("mixin_22_B.d");
		failures.add("mixin_22_C.d");
		failures.add("mixin_22_D.d");
		failures.add("mixin_23_A.d");
		failures.add("mixin_23_B.d");
		failures.add("mixin_23_C.d");
		failures.add("mixin_23_D.d");
		failures.add("mixin_25_B.d");
		failures.add("mixin_26_B.d");
		failures.add("mixin_27_A.d");
		failures.add("mixin_27_B.d");
		failures.add("mixin_27_E.d");
		failures.add("mixin_30_C.d");
		failures.add("mixin_30_D.d");
		failures.add("mixin_31_E.d");
		failures.add("mixin_31_F.d");
		failures.add("mixin_31_G.d");
		failures.add("mixin_32_B.d");
		failures.add("mixin_35_A.d");
		failures.add("mixin_36_A.d");
		failures.add("mixin_36_B.d");
		failures.add("mixin_37_A.d");
		failures.add("module_04.d");
		failures.add("named_entity_01.d");
		failures.add("named_entity_02.d");
		failures.add("named_entity_03.d");
		failures.add("named_entity_04.d");
		failures.add("nested_class_04_B.d");
		failures.add("nested_class_04_C.d");
		failures.add("nested_class_04_D.d");
		failures.add("nested_class_05_B.d");
		failures.add("nested_function_04.d");
		failures.add("nested_function_07_A.d");
		failures.add("nested_function_07_B.d");
		failures.add("nested_function_07_C.d");
		failures.add("new_20.d");
		failures.add("new_25_A.d");
		failures.add("new_25_B.d");
		failures.add("new_25_C.d");
		failures.add("new_25_D.d");
		failures.add("new_26_A.d");
		failures.add("new_26_B.d");
		failures.add("new_29_A.d");
		failures.add("new_29_D.d");
		failures.add("object_01_A.d");
		failures.add("object_01_B.d");
		failures.add("object_01_C.d");
		failures.add("object_01_D.d");
		failures.add("object_01_E.d");
		failures.add("object_01_F.d");
		failures.add("object_01_G.d");
		failures.add("object_01_H.d");
		failures.add("odd_bug_02.d");
		failures.add("odd_bug_04_A.d");
		failures.add("odd_bug_04_B.d");
		failures.add("odd_bug_04_C.d");
		failures.add("odd_bug_04_D.d");
		failures.add("odd_bug_04_E.d");
		failures.add("odd_bug_04_F.d");
		failures.add("odd_bug_06_B.d");
		failures.add("odd_bug_09_A.d");
		failures.add("odd_bug_13_A.d");
		failures.add("odd_bug_16_A.d");
		failures.add("odd_bug_16_B.d");
		failures.add("offsetof_02.d");
		failures.add("offsetof_74.d");
		failures.add("offsetof_75.d");
		failures.add("offsetof_78.d");
		failures.add("offsetof_78_C.d");
		failures.add("offsetof_79.d");
		failures.add("offsetof_80_B.d");
		failures.add("offsetof_80_C.d");
		failures.add("offsetof_80_D.d");
		failures.add("offsetof_80_E.d");
		failures.add("offsetof_80_F.d");
		failures.add("offsetof_81_A.d");
		failures.add("opAddAssign_12.d");
		failures.add("opAddAssign_13.d");
		failures.add("opAddAssign_14.d");
		failures.add("opAddAssign_15.d");
		failures.add("opAddAssign_16.d");
		failures.add("opAddAssign_17.d");
		failures.add("opCall_01_C.d");
		failures.add("opCall_02_C.d");
		failures.add("opCast_03.d");
		failures.add("opCast_05_A.d");
		failures.add("opCatAssign_07.d");
		failures.add("opCatAssign_08.d");
		failures.add("opCatAssign_19_A.d");
		failures.add("opCatAssign_19_B.d");
		failures.add("opCatAssign_19_C.d");
		failures.add("opCatAssign_19_D.d");
		failures.add("opCat_16_C.d");
		failures.add("opCat_16_D.d");
		failures.add("opCat_16_E.d");
		failures.add("opCat_16_G.d");
		failures.add("opCat_16_H.d");
		failures.add("opCat_17_A.d");
		failures.add("opCat_17_B.d");
		failures.add("opCat_23_F.d");
		failures.add("opCat_25_B.d");
		failures.add("opCmp_06_A.d");
		failures.add("opCmp_06_B.d");
		failures.add("opCmp_08_A.d");
		failures.add("opCmp_08_B.d");
		failures.add("opCmp_08_C.d");
		failures.add("opCmp_08_D.d");
		failures.add("opCmp_08_E.d");
		failures.add("opCmp_08_F.d");
		failures.add("opCmp_08_G.d");
		failures.add("opCmp_08_H.d");
		failures.add("opCmp_08_I.d");
		failures.add("opCmp_08_J.d");
		failures.add("opCmp_08_K.d");
		failures.add("opCmp_08_L.d");
		failures.add("opCmp_08_M.d");
		failures.add("opCmp_08_N.d");
		failures.add("opCmp_08_O.d");
		failures.add("opCmp_08_P.d");
		failures.add("opDivAssign_12.d");
		failures.add("opDivAssign_13.d");
		failures.add("opDivAssign_14.d");
		failures.add("opDivAssign_15.d");
		failures.add("opDivAssign_16.d");
		failures.add("opDivAssign_17.d");
		failures.add("opDiv_09_A.d");
		failures.add("opDiv_09_B.d");
		failures.add("opEquals_05_A.d");
		failures.add("opEquals_05_C.d");
		failures.add("opEquals_05_D.d");
		failures.add("opEquals_06_A.d");
		failures.add("opEquals_06_B.d");
		failures.add("opEquals_06_C.d");
		failures.add("opEquals_06_D.d");
		failures.add("opEquals_06_E.d");
		failures.add("opEquals_06_F.d");
		failures.add("opEquals_06_G.d");
		failures.add("opEquals_06_H.d");
		failures.add("opEquals_07_A.d");
		failures.add("opEquals_07_B.d");
		failures.add("opEquals_07_C.d");
		failures.add("opEquals_07_D.d");
		failures.add("opEquals_07_E.d");
		failures.add("opEquals_07_F.d");
		failures.add("opIdentity_01.d");
		failures.add("opIndexAssign_02_A.d");
		failures.add("opIndexAssign_02_B.d");
		failures.add("opIndexAssign_02_C.d");
		failures.add("opIndexAssign_02_D.d");
		failures.add("opIndex_05.d");
		failures.add("opMod_01_A.d");
		failures.add("opMod_01_B.d");
		failures.add("opMod_01_C.d");
		failures.add("opMod_01_D.d");
		failures.add("opMod_01_E.d");
		failures.add("opMod_01_F.d");
		failures.add("opMod_01_G.d");
		failures.add("opMod_01_H.d");
		failures.add("opMod_03_A.d");
		failures.add("opMod_03_B.d");
		failures.add("opMod_03_C.d");
		failures.add("opMod_03_D.d");
		failures.add("opMod_03_E.d");
		failures.add("opMod_03_F.d");
		failures.add("opMod_03_H.d");
		failures.add("opMod_03_L.d");
		failures.add("opMod_04_A.d");
		failures.add("opMod_04_B.d");
		failures.add("opMod_04_C.d");
		failures.add("opMod_04_D.d");
		failures.add("opMod_04_E.d");
		failures.add("opMod_04_F.d");
		failures.add("opMod_04_H.d");
		failures.add("opMod_04_L.d");
		failures.add("opMod_05_A.d");
		failures.add("opMod_05_B.d");
		failures.add("opMod_05_C.d");
		failures.add("opMod_05_D.d");
		failures.add("opMod_05_E.d");
		failures.add("opMod_05_F.d");
		failures.add("opMod_05_H.d");
		failures.add("opMod_05_L.d");
		failures.add("opMulAssign_15.d");
		failures.add("opMulAssign_16.d");
		failures.add("opMulAssign_17.d");
		failures.add("opMulAssign_21_A.d");
		failures.add("opMulAssign_21_B.d");
		failures.add("opMulAssign_21_C.d");
		failures.add("opMul_03.d");
		failures.add("opSubAssign_12.d");
		failures.add("opSubAssign_13.d");
		failures.add("opSubAssign_14.d");
		failures.add("opSubAssign_15.d");
		failures.add("opSubAssign_16.d");
		failures.add("opSubAssign_17.d");
		failures.add("opSubAssign_18_A.d");
		failures.add("opSubAssign_18_B.d");
		failures.add("opSubAssign_18_E.d");
		failures.add("opSubAssign_18_F.d");
		failures.add("outer_01_E.d");
		failures.add("overload_06.d");
		failures.add("overload_09.d");
		failures.add("overload_10.d");
		failures.add("overload_25_A.d");
		failures.add("overload_25_B.d");
		failures.add("overload_25_C.d");
		failures.add("overload_28_A.d");
		failures.add("override_09.d");
		failures.add("override_10.d");
		failures.add("package_01.d");
		failures.add("package_05_A.d");
		failures.add("pointer_01_A.d");
		failures.add("pointer_01_B.d");
		failures.add("pragma_msg_01_B.d");
		failures.add("pragma_msg_02_A.d");
		failures.add("private_03.d");
		failures.add("private_05.d");
		failures.add("private_06.d");
		failures.add("private_08_A.d");
		failures.add("private_08_B.d");
		failures.add("private_08_C.d");
		failures.add("private_08_D.d");
		failures.add("private_08_E.d");
		failures.add("private_08_F.d");
		failures.add("private_10_A.d");
		failures.add("private_10_B.d");
		failures.add("private_10_C.d");
		failures.add("private_10_D.d");
		failures.add("private_10_E.d");
		failures.add("private_10_F.d");
		failures.add("private_10_G.d");
		failures.add("private_10_H.d");
		failures.add("private_12_B.d");
		failures.add("private_12_C.d");
		failures.add("private_12_F.d");
		failures.add("protected_02_A.d");
		failures.add("protected_02_B.d");
		failures.add("protected_02_C.d");
		failures.add("protected_02_D.d");
		failures.add("ptr_10_D.d");
		failures.add("real_26_A.d");
		failures.add("real_26_B.d");
		failures.add("real_26_C.d");
		failures.add("real_26_D.d");
		failures.add("real_26_G.d");
		failures.add("real_26_H.d");
		failures.add("real_26_I.d");
		failures.add("real_26_K.d");
		failures.add("ref_01_A.d");
		failures.add("return_06.d");
		failures.add("return_07_B.d");
		failures.add("return_10_A.d");
		failures.add("reverse_08_A.d");
		failures.add("reverse_08_C.d");
		failures.add("scope_06_M.d");
		failures.add("scope_08_C.d");
		failures.add("scope_10_B.d");
		failures.add("scope_11_B.d");
		failures.add("scope_13_A.d");
		failures.add("scope_13_C.d");
		failures.add("scope_14_A.d");
		failures.add("scope_14_B.d");
		failures.add("scope_14_C.d");
		failures.add("scope_14_E.d");
		failures.add("scope_17_A.d");
		failures.add("scope_17_C.d");
		failures.add("scope_17_D.d");
		failures.add("sizeof_14.d");
		failures.add("sizeof_16_B.d");
		failures.add("static_34_A.d");
		failures.add("static_36_A.d");
		failures.add("static_36_B.d");
		failures.add("static_36_C.d");
		failures.add("static_36_D.d");
		failures.add("static_36_E.d");
		failures.add("static_36_F.d");
		failures.add("static_37_B.d");
		failures.add("static_38_A.d");
		failures.add("stringof_01_A.d");
		failures.add("stringof_02_C.d");
		failures.add("stringof_02_D.d");
		failures.add("stringof_02_E.d");
		failures.add("stringof_02_F.d");
		failures.add("stringof_02_I.d");
		failures.add("struct_23_A.d");
		failures.add("struct_23_B.d");
		failures.add("struct_23_C.d");
		failures.add("struct_23_D.d");
		failures.add("struct_23_E.d");
		failures.add("struct_24_B.d");
		failures.add("struct_26_A.d");
		failures.add("struct_29_A.d");
		failures.add("struct_29_B.d");
		failures.add("struct_initialization_08_B.d");
		failures.add("struct_initialization_08_C.d");
		failures.add("struct_initialization_10_A.d");
		failures.add("super_09.d");
		failures.add("super_13.d");
		failures.add("switch_22_B.d");
		failures.add("switch_22_C.d");
		failures.add("switch_22_D.d");
		failures.add("switch_24_A.d");
		failures.add("switch_24_B.d");
		failures.add("template_06.d");
		failures.add("template_07.d");
		failures.add("template_08.d");
		failures.add("template_12.d");
		failures.add("template_16.d");
		failures.add("template_17_A.d");
		failures.add("template_25_A.d");
		failures.add("template_25_B.d");
		failures.add("template_28_A.d");
		failures.add("template_29_B.d");
		failures.add("template_29_D.d");
		failures.add("template_31_C.d");
		failures.add("template_34_D.d");
		failures.add("template_37_C.d");
		failures.add("template_37_D.d");
		failures.add("template_41_D.d");
		failures.add("template_41_H.d");
		failures.add("template_43_A.d");
		failures.add("template_43_B.d");
		failures.add("template_47_B.d");
		failures.add("template_49_A.d");
		failures.add("template_50_A.d");
		failures.add("template_51_A.d");
		failures.add("template_51_B.d");
		failures.add("template_51_C.d");
		failures.add("template_51_D.d");
		failures.add("template_51_E.d");
		failures.add("template_51_F.d");
		failures.add("template_51_G.d");
		failures.add("template_51_H.d");
		failures.add("template_51_I.d");
		failures.add("template_56_B.d");
		failures.add("template_58_A.d");
		failures.add("template_58_A2.d");
		failures.add("template_58_C2.d");
		failures.add("template_58_D.d");
		failures.add("template_58_E.d");
		failures.add("template_59_A.d");
		failures.add("template_60_A.d");
		failures.add("template_61_C.d");
		failures.add("template_63_C.d");
		failures.add("template_class_04.d");
		failures.add("template_class_05.d");
		failures.add("template_class_09.d");
		failures.add("template_class_11_A.d");
		failures.add("template_class_14_A.d");
		failures.add("template_class_14_B.d");
		failures.add("template_class_14_E.d");
		failures.add("template_class_14_F.d");
		failures.add("template_class_14_I.d");
		failures.add("template_class_14_J.d");
		failures.add("template_class_16_B.d");
		failures.add("template_class_16_C.d");
		failures.add("template_class_16_D.d");
		failures.add("template_class_16_G.d");
		failures.add("template_class_16_I.d");
		failures.add("template_class_17.d");
		failures.add("template_class_20_A.d");
		failures.add("template_struct_04_O.d");
		failures.add("template_struct_04_O2.d");
		failures.add("template_struct_04_P.d");
		failures.add("template_struct_04_P2.d");
		failures.add("template_struct_04_U.d");
		failures.add("template_struct_04_V.d");
		failures.add("template_struct_05_C.d");
		failures.add("template_struct_05_D.d");
		failures.add("template_struct_05_I.d");
		failures.add("template_struct_05_J.d");
		failures.add("template_struct_05_O.d");
		failures.add("template_struct_05_P.d");
		failures.add("template_struct_07.d");
		failures.add("template_struct_09_A.d");
		failures.add("this_07.d");
		failures.add("this_10_A.d");
		failures.add("this_10_D.d");
		failures.add("this_10_E.d");
		failures.add("this_12_A.d");
		failures.add("this_13_C.d");
		failures.add("this_14_A.d");
		failures.add("this_14_G.d");
		failures.add("this_14_H.d");
		failures.add("this_14_I.d");
		failures.add("this_14_J.d");
		failures.add("this_15_A.d");
		failures.add("throw_07_A.d");
		failures.add("throw_07_B.d");
		failures.add("tupelof_01_A.d");
		failures.add("tupelof_01_B.d");
		failures.add("tuple_04_B.d");
		failures.add("tuple_04_C.d");
		failures.add("tuple_04_D.d");
		failures.add("tuple_04_E.d");
		failures.add("tuple_04_F.d");
		failures.add("tuple_05_B.d");
		failures.add("tuple_05_C.d");
		failures.add("tuple_06_A.d");
		failures.add("tuple_06_B.d");
		failures.add("tuple_06_D.d");
		failures.add("tuple_06_E.d");
		failures.add("tuple_06_F.d");
		failures.add("tuple_09_C.d");
		failures.add("tuple_09_G.d");
		failures.add("tuple_09_H.d");
		failures.add("tuple_09_I.d");
		failures.add("tuple_13_B.d");
		failures.add("tuple_15_A.d");
		failures.add("tuple_15_B.d");
		failures.add("tuple_16_A.d");
		failures.add("tuple_16_B.d");
		failures.add("tuple_16_C.d");
		failures.add("tuple_16_D.d");
		failures.add("tuple_17_A.d");
		failures.add("tuple_18_A.d");
		failures.add("tuple_18_B.d");
		failures.add("tuple_18_C.d");
		failures.add("tuple_18_D.d");
		failures.add("tuple_18_F.d");
		failures.add("tuple_18_G.d");
		failures.add("tuple_19_A.d");
		failures.add("tuple_20_A.d");
		failures.add("tuple_21_A.d");
		failures.add("tuple_21_B.d");
		failures.add("tuple_22_B.d");
		failures.add("tuple_23_B.d");
		failures.add("tuple_23_C.d");
		failures.add("tuple_24_A.d");
		failures.add("typedef_06_A.d");
		failures.add("typedef_09_B.d");
		failures.add("typedef_09_D.d");
		failures.add("typedef_09_E.d");
		failures.add("typedef_11_A.d");
		failures.add("typedef_11_B.d");
		failures.add("typedef_11_C.d");
		failures.add("typedef_11_I.d");
		failures.add("typedef_13_E.d");
		failures.add("typedef_16_C.d");
		failures.add("typedef_18_B.d");
		failures.add("typedef_20_A.d");
		failures.add("typedef_22_A.d");
		failures.add("typedef_22_B.d");
		failures.add("typedef_23_C.d");
		failures.add("typedef_24_A.d");
		failures.add("typeid_14.d");
		failures.add("typeid_17.d");
		failures.add("typeid_20.d");
		failures.add("typeid_23.d");
		failures.add("typeid_26.d");
		failures.add("typeid_29.d");
		failures.add("typeid_32.d");
		failures.add("typeid_35.d");
		failures.add("typeid_38.d");
		failures.add("typeid_41.d");
		failures.add("typeid_62.d");
		failures.add("typeid_65.d");
		failures.add("typeid_68.d");
		failures.add("typeid_70.d");
		failures.add("typeid_71.d");
		failures.add("typeid_72.d");
		failures.add("typeid_73.d");
		failures.add("typeid_74.d");
		failures.add("typeid_78.d");
		failures.add("typeid_79.d");
		failures.add("typeid_80.d");
		failures.add("typeid_84.d");
		failures.add("typeid_85.d");
		failures.add("typeid_86_A.d");
		failures.add("typeid_86_C.d");
		failures.add("typeid_86_D.d");
		failures.add("typeid_86_E.d");
		failures.add("typeid_91_D.d");
		failures.add("typeid_91_F.d");
		failures.add("typeinfo_03_A.d");
		failures.add("typeinfo_03_D.d");
		failures.add("typeof_07_A.d");
		failures.add("typeof_07_B.d");
		failures.add("typeof_10_B.d");
		failures.add("typeof_10_C.d");
		failures.add("typeof_11_A.d");
		failures.add("typeof_11_C.d");
		failures.add("typeof_11_D.d");
		failures.add("typeof_15_A.d");
		failures.add("unittest_10_G.d");
		failures.add("unittest_10_H.d");
		failures.add("variadic_argument_07_B.d");
		failures.add("variadic_argument_07_C.d");
		failures.add("variadic_argument_07_D.d");
		failures.add("version_02.d");
		failures.add("version_09_A.d");
		failures.add("version_09_B.d");
		failures.add("version_32.d");
		failures.add("void_02_A.d");
		failures.add("void_02_B.d");
		failures.add("void_02_D.d");
		failures.add("void_05_A.d");
		failures.add("void_05_B.d");
		failures.add("void_06_A.d");
		failures.add("void_07_A.d");
		failures.add("volatile_01_A.d");
		failures.add("volatile_01_B.d");
		failures.add("volatile_02_A.d");
		failures.add("volatile_02_B.d");
		failures.add("volatile_02_C.d");
		failures.add("volatile_02_D.d");
		failures.add("wchar_11_A.d");
		failures.add("wchar_11_B.d");
		failures.add("wchar_11_C.d");
		failures.add("wchar_11_D.d");
		failures.add("wchar_11_E.d");
		failures.add("wchar_11_F.d");
		failures.add("wchar_11_G.d");
		failures.add("wchar_11_H.d");
		
		// These ones also fail on DMD 1.020, whether because they require
		// specific command-line arguments (the version and debug ones, allow
		// deprectated, etc.), or just because they fail.
		failures.add("debug_12_A.d");
		failures.add("struct_30_C.d");
		failures.add("struct_30_D.d");
		failures.add("version_39_A.d");
		failures.add("associative_array_23_B.d");
		failures.add("auto_16_B.d");
		failures.add("auto_16_D.d");
		failures.add("command_line_debug_01.d");
		failures.add("command_line_debug_02.d");
		failures.add("command_line_debug_03.d");
		failures.add("command_line_debug_04.d");
		failures.add("command_line_debug_08.d");
		failures.add("command_line_version_01.d");
		failures.add("command_line_version_02.d");
		failures.add("command_line_version_03.d");
		failures.add("deprecated_21_A.d");
		failures.add("deprecated_21_B.d");
		failures.add("double_30_A.d");
		failures.add("deprecated_13.d");
		failures.add("final_13_A.d");
		failures.add("struct_initialization_11_C.d");
		failures.add("struct_initialization_13_A.d");
		failures.add("static_18.d");
		failures.add("template_65_B.d");
		failures.add("template_65_C.d");
		failures.add("typeof_17_B.d");
		failures.add("typeof_17_C.d");
		
		// These ones deals with encoding, but Eclipse already do that
		// for us... just ignore them, they work
		failures.add("encoding_utf_16be_bom.d");
		failures.add("encoding_utf_16le.d");
		failures.add("encoding_utf_16le_bom.d");
		failures.add("encoding_utf_32le.d");
		failures.add("encoding_utf_32le_bom.d");
		failures.add("encoding_utf_8.d");
		failures.add("encoding_utf_8_bom.d");
		for(int i = 0; i <= 7; i++) {
			failures.add("unicode_0" + i + ".d");
		}
		failures.add("eol_comment_07.d");
		failures.add("eol_comment_08.d");
		failures.add("eol_comment_09.d");
		failures.add("eol_01.d");
		failures.add("eol_02.d");
		failures.add("eol_03.d");
		
		for(int i = 1; i <= 43; i++) {
			failures.add("invalid_utf_" + (i < 10 ? "0" + i : i) + ".d");
		}
		
		// Although they are not failures, Descent dies because of
		// a StackOverflowError
		failures.add("if_05.d");
		failures.add("large_id_01_C.d");
		
		// I don't think this one _should_ pass, and the fact it passes
		// in DMD is weird. Check the test, it basically is testing that
		// long.min == a large positive number.
		failures.add("long_01.d");
	}

}
